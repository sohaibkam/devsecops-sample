name: CI - Build + Security Gates

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

permissions:
  contents: read
  packages: write
  id-token: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/devsecops-sample
  IMAGE_TAG: ${{ github.sha }}

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (for local lint/build tasks)
        run: npm ci

      - name: Run Semgrep (static code analysis)
        uses: returntocorp/semgrep-action@v1
        with:
          config: 'p/ci'     # public baseline; replace with './semgrep-rules' to use custom rules
        # semgrep will exit non-zero if rules have severity 'ERROR' or are configured to fail

      - name: Build image (local tag)
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trivy - filesystem scan (repository)
        id: trivy-fs
        uses: aquasecurity/trivy-action@v2
        with:
          scan-type: fs
          scan-ref: '.'
          format: json
          output: trivy-fs-report.json
          severity: CRITICAL,HIGH
          ignore-unfixed: false

      - name: Upload trivy-fs report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-report
          path: trivy-fs-report.json

      - name: Trivy - image scan (fail on HIGH/CRITICAL)
        id: trivy-image
        uses: aquasecurity/trivy-action@v2
        with:
          scan-type: image
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: json
          output: trivy-image-report.json
          severity: CRITICAL,HIGH
          exit-code: 1           # exit 1 if any HIGH/CRITICAL found

      - name: Upload trivy-image report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-image-report
          path: trivy-image-report.json

      # Optional Snyk step (comment out if not using Snyk)
      #- name: Snyk test (container + project)
      #  uses: snyk/actions/docker@master
      #  with:
      #    command: test
      #    args: --severity-threshold=high
      #  env:
      #    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Push only on main and only after all gates passed
      - name: Log in to GHCR
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image to GHCR (main only)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
